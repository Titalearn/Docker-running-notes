ticket001: Install and setup docker in ubuntu  
Install Docker on an Ubuntu server  
###########################

#!/bin/bash
sudo hostnamectl set-hostname docker
sudo apt update -y
sudo apt install docker.io -y
sudo service docker start
sudo docker info
sudo usermod -aG docker ubuntu
sudo su - ubuntu    
sudo docker ps    
 
Docker Image: --> It's a package which contains
                 everything (Libraries, Softwares+ENV+Application Code)
                 needed to run your application.
                 appCode + dependencies[Libraries, Softwares+ENV+]

Docker containers: Run time instance of a docker image. 
     If you execute: docker run, 
     a container is created from the image 

IQ: How many environment are you supporting in your CURRENT role??
         Development environment    
         Testing/QA environment    
         Production environment 
In docker applications run as containers

docker build -t tesla:1 .  
docker run --name tesla -d -p 8000:8080 tesla:1      

 curl 35.92.218.3:8000/webapp     

docker run --name containerName -d -p hostPort:containerPort image:tag 
  -d = detachable mode  
  -p = port Forwarding 

docker run --name hello -d -p 80:80 mylandmarktech/hello 
  curl 35.92.218.3:80  
  docker ps 


DEploying AN Application With an Imageyou don't have
====================================================
docker run --name hello -d -p 80:80 mylandmarktech/hello 
-we do not have these image
-it is going to pull the image from an image registry
-Curl the application on port 80 to make sure its runing
e.g 34.92.218.3:80

some docker commands
=====================

docker ps = These shows you application running
docker images = This shows the images you have
docker run = Deploys the application
docker push = Its used to ship images to registries
docker inspect = shows everything about your container 
docker pull = this will pull and image from docker hub
docker tag = tags an image before its pushed
docker login = used for authentication

We can create Registry in Dockerhub,amazonEcr,Nexus,Jfrog
In docker we can divide our environments to dev/prod/Uat
we can build an image in the dev environment and push it to dockerhub.
we pull the image from docker hub to the prod environment and use the image to deploy the application.

DOCKER ENGINE
==============
Consist of docker Cli
consist of docker Daemon


Take note for docker registry we have private and public dockerhub registery.
Take note that each container has an ip-address allocated to it.
Each container listens on a port.


what is docker hub?
=====================
Docker Hub is the world's largest. library and community for container images. 
https://hub.docker.com/
create a docker hub acount
The tags on the images also stands for the versions.
You can choose any version
e.g
docker push lavetlearn/spring-boot-mongo:32
docker tag tesla:1 mylandmarktech/maven-web-app:32
docker push mylandmarktech/maven-web-app:32   

docker tag tesla:1 mylandmarktech/tesla:1  


How to push image to a private registry
========================================
docker login
username
and password needed.

First you need to be authenticated before your able to push
To push an image you must first tag the image before pushing.
docker tag local-image:tagname new-repo:tagname
docker push new-repo:tagname


docker push mylandmarktech/tesla:1   


Docker images commands:
============================
  docker build    = create a docker image from a Dockerfile  
  docker tag      = assigns repository name to images 
  docker images   = list images
  docker image ls = list images
  docker images -q = list image ids 


docker images -q

  docker build/tag/inspect/push/pull/

  docker rmi imageName/imageID
  docker rmi -f mylandmarktech/hello
  
  docker rmi -f mylandmarktech/hello  
  docker rmi -f   

Pull images from Public registry [dockerhub] : 
    No athentication is required

Pull images from private registry [ecr/dockerhub/nexus/JFrog] :
    Authentication is required   
    docker login -u username -p password 

push images to Public registry [dockerhub] :
      Authentication is required   
      docker login -u username -p password 

push images to private registry [dockerhub] :
      Authentication is required   
      docker login -u username -p password 

Commands:
docker image  :
  build       Build an image from a Dockerfile
  history     Show the history of an image
  import      Import the contents from a tarball to create a filesystem image
  inspect     Display detailed information on one or more images
  load        Load an image from a tar archive or STDIN
  ls          List images
  prune       Remove unused images
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rm          Remove one or more images
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE


docker pull mylandmarktech/wfapp:32   
  docker pull nginx
  docker pull sonarqube
  docker pull jenkins/jenkins





